services:
  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - microservices-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s

  mongo-express:
    image: mongo-express:latest
    container_name: mongo-express
    ports:
      - "8081:8081"
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongodb
      - ME_CONFIG_MONGODB_PORT=27017
      - ME_CONFIG_BASICAUTH=false
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - microservices-network

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"   # AMQP port
      - "15672:15672" # Management UI port
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - microservices-network
    healthcheck:
      test: rabbitmq-diagnostics check_running && rabbitmq-diagnostics check_port_connectivity
      interval: 30s
      timeout: 30s
      retries: 5
      start_period: 40s

  order-service:
    build:
      context: ./OrderService
      dockerfile: Dockerfile
    container_name: order-service
    command: yarn dev
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - PORT=3001
      - MONGODB_URI=mongodb://mongodb:27017/order-service
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672
    volumes:
      - ./OrderService:/app
      - order_node_modules:/app/node_modules
    depends_on:
      mongodb:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      product-service:
        condition: service_started
    networks:
      - microservices-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s

  product-service:
    build:
      context: ./ProductService
      dockerfile: Dockerfile
    container_name: product-service
    command: yarn dev
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - PORT=3000
      - MONGODB_URI=mongodb://mongodb:27017/product-service
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672
    volumes:
      - ./ProductService:/app
      - product_node_modules:/app/node_modules
    depends_on:
      mongodb:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - microservices-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s

  notification-service:
    build:
      context: ./NotificationService
      dockerfile: Dockerfile
    container_name: notification-service
    command: yarn dev
    ports:
      - "3002:3002"
    environment:
      - NODE_ENV=development
      - PORT=3002
      - MONGODB_URI=mongodb://mongodb:27017/notification-service
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672
      - LOG_LEVEL=debug
    volumes:
      - ./NotificationService:/app
      - notification_node_modules:/app/node_modules
    depends_on:
      mongodb:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      order-service:
        condition: service_started
    networks:
      - microservices-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3002/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s

  api-gateway:
    build:
      context: ./ApiGateway
      dockerfile: Dockerfile
    container_name: api-gateway
    command: yarn dev
    ports:
      - "3003:3003"
    environment:
      - NODE_ENV=development
      - PORT=3003
      - MONGODB_URI=mongodb://mongodb:27017/api-gateway
      - JWT_SECRET=your-super-secret-key-change-this-in-production
      - PRODUCT_SERVICE_URL=http://product-service:3000
      - ORDER_SERVICE_URL=http://order-service:3001
      - NOTIFICATION_SERVICE_URL=http://notification-service:3002
    volumes:
      - ./ApiGateway:/app
      - api_gateway_node_modules:/app/node_modules
    depends_on:
      mongodb:
        condition: service_healthy
      product-service:
        condition: service_started
      order-service:
        condition: service_started
      notification-service:
        condition: service_started
    networks:
      - microservices-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://api-gateway:3003/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s

networks:
  microservices-network:
    driver: bridge

volumes:
  mongodb_data:
  rabbitmq_data:
  order_node_modules:
  product_node_modules:
  notification_node_modules:
  api_gateway_node_modules: